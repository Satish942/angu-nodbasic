1
00:00:02,149 --> 00:00:05,080
<v Instructor>As with sending the message,</v>

2
00:00:05,080 --> 00:00:08,312
of course we now have to work in our message service again,

3
00:00:08,312 --> 00:00:10,912
where we get the messages.

4
00:00:10,912 --> 00:00:13,701
Now, getMessages no longer works like this.

5
00:00:13,701 --> 00:00:17,760
I will no longer simply get my messages array.

6
00:00:17,760 --> 00:00:21,352
Instead, here, I want to reach out to my backend

7
00:00:21,352 --> 00:00:23,411
and get the messages from there,

8
00:00:23,411 --> 00:00:28,120
so let's override this and access http here again.

9
00:00:28,120 --> 00:00:29,792
I will return it because, again,

10
00:00:29,792 --> 00:00:32,100
we will just create an observable,

11
00:00:32,100 --> 00:00:34,301
but here, of course, I need the get method,

12
00:00:34,301 --> 00:00:36,699
since we will send a get request.

13
00:00:36,699 --> 00:00:38,992
The URL is the same as above,

14
00:00:38,992 --> 00:00:41,311
so you may just copy from there.

15
00:00:41,311 --> 00:00:43,821
It's slash message at the end.

16
00:00:43,821 --> 00:00:45,800
I don't need to send the body here,

17
00:00:45,800 --> 00:00:48,969
because I'm not sending any data in the request body,

18
00:00:48,969 --> 00:00:51,160
and I also don't need to setup headers,

19
00:00:51,160 --> 00:00:53,061
because, again, I'm not sending any data,

20
00:00:53,061 --> 00:00:56,211
so no need to set the content type.

21
00:00:56,211 --> 00:00:59,701
I do want to transform the response, though,

22
00:00:59,701 --> 00:01:02,280
so I do need the map method.

23
00:01:02,280 --> 00:01:05,776
Here, I will get back my response, of course,

24
00:01:05,776 --> 00:01:08,440
of type Response, as before,

25
00:01:08,440 --> 00:01:10,729
but now, it's more than a one-liner,

26
00:01:10,729 --> 00:01:13,700
so I'll add a function Body here.

27
00:01:13,700 --> 00:01:18,691
First, I want to retrieve my messages, like this, messages.

28
00:01:18,691 --> 00:01:22,501
I can retrieve them from the response with the json method,

29
00:01:22,501 --> 00:01:24,630
and then access the object field.

30
00:01:24,630 --> 00:01:27,421
Remember, this object field here,

31
00:01:27,421 --> 00:01:29,691
is the field I'm setting up here,

32
00:01:29,691 --> 00:01:32,160
when I'm getting my messages

33
00:01:32,160 --> 00:01:34,461
and setting up the object and returning.

34
00:01:34,461 --> 00:01:37,781
If I were to rename this to messages,

35
00:01:37,781 --> 00:01:41,651
then I would have to use messages on the front end as well,

36
00:01:41,651 --> 00:01:43,480
but here, it's object.

37
00:01:43,480 --> 00:01:46,792
So these are the messages I got from the server.

38
00:01:46,792 --> 00:01:49,680
The issue is the messages on the server

39
00:01:49,680 --> 00:01:51,272
do have different fields

40
00:01:51,272 --> 00:01:53,951
than the ones I need on the front end.

41
00:01:53,951 --> 00:01:56,911
If we have a look at such a message object,

42
00:01:56,911 --> 00:02:00,266
you see we get this underscore, underscore, v-thing,

43
00:02:00,266 --> 00:02:02,604
the underscore id-thing and,

44
00:02:02,604 --> 00:02:03,986
well, that's not really how

45
00:02:03,986 --> 00:02:06,604
our front end message looks like.

46
00:02:06,604 --> 00:02:10,564
Instead, our front end message should look like this,

47
00:02:10,564 --> 00:02:15,044
content, username, and possibly a messageId and userId.

48
00:02:15,044 --> 00:02:19,756
Now, in order to achieve this, I need to transform it here,

49
00:02:19,756 --> 00:02:23,175
so first, I will create a new array,

50
00:02:23,175 --> 00:02:26,276
name it transformedMessages,

51
00:02:26,276 --> 00:02:29,603
which will hold my, well, transformed messages.

52
00:02:29,603 --> 00:02:33,520
So this will basically be an array of messages,

53
00:02:35,464 --> 00:02:37,666
so let's import messages,

54
00:02:37,666 --> 00:02:40,374
on, of course, a type Message array,

55
00:02:40,374 --> 00:02:43,695
and there will be an empty array at the beginning.

56
00:02:43,695 --> 00:02:46,956
Next, I want to loop through my messages

57
00:02:46,956 --> 00:02:49,539
in this messages constant here.

58
00:02:50,716 --> 00:02:54,883
So here, I can simply say for let message of messages,

59
00:02:56,516 --> 00:03:00,683
this for-of loop is ES6 syntax supported by TypeScript.

60
00:03:02,164 --> 00:03:05,364
So here, it can loop through all the messages in the array,

61
00:03:05,364 --> 00:03:07,882
and then, for each message,

62
00:03:07,882 --> 00:03:11,054
I want to say transformedMessages,

63
00:03:11,054 --> 00:03:15,735
push, so push it on this array of transformed messages,

64
00:03:15,735 --> 00:03:19,818
and here, simply create a new message, like this.

65
00:03:21,494 --> 00:03:24,695
This new message will then hold the content,

66
00:03:24,695 --> 00:03:27,695
which I can extract from the message

67
00:03:28,716 --> 00:03:31,626
I'm currently at in this iteration,

68
00:03:31,626 --> 00:03:33,959
and here, the content field.

69
00:03:37,145 --> 00:03:39,135
I also want to store the id,

70
00:03:39,135 --> 00:03:43,302
so message.id is the next field I want to extract.

71
00:03:44,215 --> 00:03:46,548
And for username and userid,

72
00:03:47,466 --> 00:03:52,423
I'll pass dummy and null for now, because I don't have it.

73
00:03:52,423 --> 00:03:54,884
I don't use users yet.

74
00:03:54,884 --> 00:03:56,426
So with this loop, I'm looping through

75
00:03:56,426 --> 00:03:59,364
all the messages I get from the server, I transform them,

76
00:03:59,364 --> 00:04:03,036
and I push them onto the array, transformedMessages.

77
00:04:03,036 --> 00:04:07,124
As a last step, I return this transformedMessages array,

78
00:04:07,124 --> 00:04:09,375
because my map function here needs to get

79
00:04:09,375 --> 00:04:11,575
something returned to it, kind of,

80
00:04:11,575 --> 00:04:13,784
because again, behind the scenes,

81
00:04:13,784 --> 00:04:16,956
it will automatically create a new observable

82
00:04:16,956 --> 00:04:19,476
which holds these transformed messages.

83
00:04:19,476 --> 00:04:21,095
Because always keep in mind,

84
00:04:21,095 --> 00:04:24,147
we are subscribing to an observable in the end,

85
00:04:24,147 --> 00:04:26,747
so map needs to give us an observable.

86
00:04:26,747 --> 00:04:28,198
It does this behind the scenes,

87
00:04:28,198 --> 00:04:30,886
but it needs to have something to work with,

88
00:04:30,886 --> 00:04:32,547
and this is what we return here,

89
00:04:32,547 --> 00:04:35,037
our transformed data.

90
00:04:35,037 --> 00:04:38,766
Next, I will also add the catch method from above,

91
00:04:38,766 --> 00:04:41,907
to handle any possible errors here.

92
00:04:41,907 --> 00:04:45,490
Now, with this, I'm extracting my messages.

93
00:04:46,726 --> 00:04:50,893
It's now, of course, time to also use them in my components.

94
00:04:51,766 --> 00:04:54,878
So any message list component where I get my messages,

95
00:04:54,878 --> 00:04:57,267
we no longer assign them like this.

96
00:04:57,267 --> 00:05:02,086
Instead here, we need to subscribe to our messages service,

97
00:05:02,086 --> 00:05:05,398
and what I want to do here is in the success callback,

98
00:05:05,398 --> 00:05:07,606
where I get my messages,

99
00:05:07,606 --> 00:05:11,566
and I know this will be of type, Message,

100
00:05:11,566 --> 00:05:13,947
array, of course, because this is what we set it to

101
00:05:13,947 --> 00:05:16,118
in the transformed messages array,

102
00:05:16,118 --> 00:05:18,254
we created the map method.

103
00:05:18,254 --> 00:05:20,276
So here, what I want to do is,

104
00:05:20,276 --> 00:05:24,443
I want to set this.messages equal to messages here,

105
00:05:27,438 --> 00:05:31,078
and this parentheses should be placed here.

106
00:05:31,078 --> 00:05:34,161
Now, to keep this application in sync

107
00:05:35,236 --> 00:05:38,417
back in the message service, what I will do is here

108
00:05:38,417 --> 00:05:40,886
in the map method, for example,

109
00:05:40,886 --> 00:05:45,497
I will also set this.messages, so in the service,

110
00:05:45,497 --> 00:05:48,247
equal to the transformedMessages,

111
00:05:49,998 --> 00:05:52,526
so that the array I'm returning here,

112
00:05:52,526 --> 00:05:55,657
and I'm using the component, is all the same,

113
00:05:55,657 --> 00:05:59,486
due to it being a reference type, as in this service.

114
00:05:59,486 --> 00:06:01,406
This will become important later on,

115
00:06:01,406 --> 00:06:05,886
when I start accessing messages from other methods,

116
00:06:05,886 --> 00:06:09,097
like later on I will access them from the addMessage method,

117
00:06:09,097 --> 00:06:11,638
or delete them, and so on.

118
00:06:11,638 --> 00:06:15,221
So with this, if I rerun the build process,

119
00:06:16,606 --> 00:06:19,689
since it quit due to some error here.

120
00:06:20,523 --> 00:06:21,856
If I rerun this,

121
00:06:23,827 --> 00:06:27,358
also make sure to restart your backend server,

122
00:06:27,358 --> 00:06:29,587
since we made some changes there.

123
00:06:29,587 --> 00:06:32,777
Thereafter, let's reload this application.

124
00:06:32,777 --> 00:06:35,387
We already see the test you created before,

125
00:06:35,387 --> 00:06:37,467
so fetching does work.

126
00:06:37,467 --> 00:06:39,015
Now, the username is missing,

127
00:06:39,015 --> 00:06:41,495
and that's just happening because I have a tiny mistake here

128
00:06:41,495 --> 00:06:43,945
when I transformed my messages.

129
00:06:43,945 --> 00:06:48,027
I'm assigning the message id to the username field,

130
00:06:48,027 --> 00:06:51,444
and the username to the message id field.

131
00:06:52,286 --> 00:06:56,935
So, I'll quickly reverse or switch these two fields here.

132
00:06:56,935 --> 00:06:59,278
So with this now, if I save this,

133
00:06:59,278 --> 00:07:02,897
let it rebuild, and then, reload the application,

134
00:07:02,897 --> 00:07:05,297
we should see, Dummy, here,

135
00:07:05,297 --> 00:07:08,387
and the part where we stored the actual user,

136
00:07:08,387 --> 00:07:10,667
that will follow in the next section.

137
00:07:10,667 --> 00:07:12,566
For now, we've got a working mechanism

138
00:07:12,566 --> 00:07:14,934
to save and fetch messages.

139
00:07:14,934 --> 00:07:19,101
The next step, of course, is to also be able to edit them.

