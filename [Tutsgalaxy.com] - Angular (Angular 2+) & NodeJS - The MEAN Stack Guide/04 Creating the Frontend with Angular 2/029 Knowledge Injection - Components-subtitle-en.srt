1
00:00:01,817 --> 00:00:03,124
<v Narrator>Before having a look at how</v>

2
00:00:03,124 --> 00:00:04,997
the Angular 2 application starts, there is

3
00:00:04,997 --> 00:00:07,220
one important thing to know.

4
00:00:07,220 --> 00:00:09,787
Angular 2 uses components.

5
00:00:09,787 --> 00:00:12,407
An Augular 2 application is created

6
00:00:12,407 --> 00:00:14,674
from multiple components.

7
00:00:14,674 --> 00:00:17,978
So, this would be a typical Angular 2 application.

8
00:00:17,978 --> 00:00:19,938
We might have a header, a main section

9
00:00:19,938 --> 00:00:23,454
with model items and and let's say a sidebar.

10
00:00:23,454 --> 00:00:25,775
All of that will sit on a root component.

11
00:00:25,775 --> 00:00:27,975
So, if you have a look at this picture

12
00:00:27,975 --> 00:00:30,147
or this image here, I think it makes sense

13
00:00:30,147 --> 00:00:31,977
that you can think of basically any

14
00:00:31,977 --> 00:00:34,294
web page you know to consist of

15
00:00:34,294 --> 00:00:36,185
mode components, and since this is

16
00:00:36,185 --> 00:00:38,295
the case, Angular 2 uses this concept

17
00:00:38,295 --> 00:00:41,212
to split up your code into multiple

18
00:00:42,174 --> 00:00:45,397
pieces, modules, so called components,

19
00:00:45,397 --> 00:00:47,340
of which you build your application.

20
00:00:47,340 --> 00:00:48,883
The great thing is, you of course can,

21
00:00:48,883 --> 00:00:51,145
you don't have to, but of course you can,

22
00:00:51,145 --> 00:00:53,374
reuse your components.

23
00:00:53,374 --> 00:00:55,849
And, why is this also useful?

24
00:00:55,849 --> 00:00:59,404
Because each component is contain

25
00:00:59,404 --> 00:01:01,709
piece of code which contains a template,

26
00:01:01,709 --> 00:01:03,580
so, html code, which will be displayed

27
00:01:03,580 --> 00:01:06,193
in the browser in the end.

28
00:01:06,193 --> 00:01:08,693
But, also a class, which holds

29
00:01:09,660 --> 00:01:11,426
the lodging of this component.

30
00:01:11,426 --> 00:01:13,666
Let's say what should happen the user clicks a button,

31
00:01:13,666 --> 00:01:17,796
if user enters a value into input field, and so on.

32
00:01:17,796 --> 00:01:21,024
The class which holds the logic is hooked up to

33
00:01:21,024 --> 00:01:24,641
the template which holds the html code via databinding.

34
00:01:24,641 --> 00:01:26,922
Of course, you will see this in this course.

35
00:01:26,922 --> 00:01:30,452
We also get a lifecycle each component follows through.

36
00:01:30,452 --> 00:01:33,527
So, Angular 2 creates it, destroys it, updates it.

37
00:01:33,527 --> 00:01:36,938
All of that makes components very powerful

38
00:01:36,938 --> 00:01:39,641
and why Angular 2 uses this concept

39
00:01:39,641 --> 00:01:41,752
to create your application.

40
00:01:41,752 --> 00:01:43,386
We'll see this in action throughout the course.

41
00:01:43,386 --> 00:01:45,974
Let's now first start by actually starting

42
00:01:45,974 --> 00:01:50,057
our Angular 2 application and see how this works.

