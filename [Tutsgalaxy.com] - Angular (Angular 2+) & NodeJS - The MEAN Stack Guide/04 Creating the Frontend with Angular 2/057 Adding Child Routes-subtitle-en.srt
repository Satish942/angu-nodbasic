1
00:00:01,976 --> 00:00:03,998
<v Instructor>I will start by creating the links.</v>

2
00:00:03,998 --> 00:00:05,898
We already learned how to do so.

3
00:00:05,898 --> 00:00:08,185
I will do it in the authentication component,

4
00:00:08,185 --> 00:00:10,199
which is the parent component for

5
00:00:10,199 --> 00:00:13,272
this whole authentication feature.

6
00:00:13,272 --> 00:00:15,356
In here, I want to have a header

7
00:00:15,356 --> 00:00:18,339
with a clause of row and spacing, which is a custom clause,

8
00:00:18,339 --> 00:00:21,401
which, well, you guess it, adds some spacing so that

9
00:00:21,401 --> 00:00:24,497
it doesn't sit directly on top of other elements.

10
00:00:24,497 --> 00:00:27,103
And then, there, a nav with the well-known

11
00:00:27,103 --> 00:00:31,270
col-md-8 column width here and the offset to centre it,

12
00:00:34,452 --> 00:00:36,368
and then inside of this nav,

13
00:00:36,368 --> 00:00:40,215
I want to have unordered list with nav nav-tabs.

14
00:00:40,215 --> 00:00:44,054
Remember in the main header here, we used nav-pills,

15
00:00:44,054 --> 00:00:48,272
which is a Bootstrap class to get this pills look here.

16
00:00:48,272 --> 00:00:52,439
Now, I want to have this tabs look to give us multiple tabs.

17
00:00:53,682 --> 00:00:56,072
And this is the CSS class I have to use,

18
00:00:56,072 --> 00:00:58,752
again, provided by Bootstrap.

19
00:00:58,752 --> 00:01:01,822
In there, it's time to set up some list items

20
00:01:01,822 --> 00:01:05,467
with nested links, and I will get rid of the ref attribute,

21
00:01:05,467 --> 00:01:08,448
because I will soon add a routerLink again.

22
00:01:08,448 --> 00:01:12,662
Here, I want to have a tab for signing up,

23
00:01:12,662 --> 00:01:15,829
for sign-in, and for logout of course.

24
00:01:18,896 --> 00:01:21,455
So, what this should give me is, when I save this

25
00:01:21,455 --> 00:01:25,615
and reload the auth page, we get the three tabs here.

26
00:01:25,615 --> 00:01:26,945
Of course, they don't work,

27
00:01:26,945 --> 00:01:28,426
and it doesn't look too beautiful

28
00:01:28,426 --> 00:01:30,516
because we don't see anything else,

29
00:01:30,516 --> 00:01:32,066
but that is what I'm going to work next

30
00:01:32,066 --> 00:01:35,306
when I set up my routes and load them.

31
00:01:35,306 --> 00:01:36,786
Now, you already know we need a place

32
00:01:36,786 --> 00:01:39,455
to load them with the routerOutlet.

33
00:01:39,455 --> 00:01:43,538
So, let's add another row here with some spacing,

34
00:01:44,682 --> 00:01:48,432
and in here, add the router-outlet directive.

35
00:01:50,046 --> 00:01:53,421
Now, you might say, "We already used router-outlet

36
00:01:53,421 --> 00:01:55,981
"in the app component here.

37
00:01:55,981 --> 00:01:59,871
"Now, I'm using it again in the authentication component.

38
00:01:59,871 --> 00:02:03,704
"How does Angular2 know what to render where?"

39
00:02:04,761 --> 00:02:06,441
It's very simple.

40
00:02:06,441 --> 00:02:10,682
Routes set up in the app routing file in our root router

41
00:02:10,682 --> 00:02:14,849
here will get loaded, on the highest possible level here,

42
00:02:16,390 --> 00:02:19,778
will get loaded in the top-most routerOutlet,

43
00:02:19,778 --> 00:02:21,938
which sits in our app component here, in the template

44
00:02:21,938 --> 00:02:24,080
of our app component.

45
00:02:24,080 --> 00:02:27,392
Nested routes, as I will create them in a second,

46
00:02:27,392 --> 00:02:31,674
will be loaded in the component where I nested them.

47
00:02:31,674 --> 00:02:33,025
But to make this a bit clearer,

48
00:02:33,025 --> 00:02:35,012
let's start creating these routes so

49
00:02:35,012 --> 00:02:36,993
that we can see what I mean.

50
00:02:36,993 --> 00:02:38,132
I will create a new file

51
00:02:38,132 --> 00:02:41,465
in the auth folder named auth.routes.ts.

52
00:02:42,502 --> 00:02:45,993
Here, I will again create a constant named,

53
00:02:45,993 --> 00:02:49,673
let's say, AUTH_ROUTES, which is of type Routes,

54
00:02:49,673 --> 00:02:52,913
which needs to be imported from @angular/router.

55
00:02:52,913 --> 00:02:55,412
This is an array of routes and you'll already notice

56
00:02:55,412 --> 00:02:57,825
from the app routing file, this one here.

57
00:02:57,825 --> 00:02:59,995
This array is the same.

58
00:02:59,995 --> 00:03:02,966
So, in here, I again define some JavaScript objects,

59
00:03:02,966 --> 00:03:05,196
setting up some nested routes,

60
00:03:05,196 --> 00:03:07,006
but right now Angular2 doesn't know that

61
00:03:07,006 --> 00:03:08,497
they are nested, of course.

62
00:03:08,497 --> 00:03:11,337
I set them up in the same way as before.

63
00:03:11,337 --> 00:03:13,911
The important thing about the path here is,

64
00:03:13,911 --> 00:03:18,868
this path is now to be seen relative from /auth,

65
00:03:18,868 --> 00:03:20,777
because I will soon set them up

66
00:03:20,777 --> 00:03:23,720
to be child routes of the auth route.

67
00:03:23,720 --> 00:03:27,887
So, all paths I enter now are auth/ and then this path.

68
00:03:30,089 --> 00:03:33,268
So, here I want to have a signup path,

69
00:03:33,268 --> 00:03:36,637
which in the end will be auth/signup,

70
00:03:36,637 --> 00:03:39,715
because I will add it as a child route.

71
00:03:39,715 --> 00:03:42,548
This is important to keep in mind.

72
00:03:43,494 --> 00:03:47,144
So here, this will be the signup path,

73
00:03:47,144 --> 00:03:50,624
and I want to load the signup component in this case,

74
00:03:50,624 --> 00:03:53,513
which needs to be imported in this file.

75
00:03:53,513 --> 00:03:56,934
I will duplicate this twice to also have a signin

76
00:03:56,934 --> 00:04:01,813
and a logout route here where I have my signin component,

77
00:04:01,813 --> 00:04:03,664
which needs to be imported at the top,

78
00:04:03,664 --> 00:04:06,724
and my logout component which also needs to be imported.

79
00:04:06,724 --> 00:04:09,594
These are my three child routes.

80
00:04:09,594 --> 00:04:13,272
I also will set up a redirection here for the empty path,

81
00:04:13,272 --> 00:04:14,881
which, again, is not really empty.

82
00:04:14,881 --> 00:04:18,832
It's /auth/ nothing, in which case I don't want

83
00:04:18,832 --> 00:04:21,241
to load a component, but let's say I want

84
00:04:21,241 --> 00:04:26,050
to redirect to signup, and now here's important.

85
00:04:26,050 --> 00:04:30,228
Not /signup, this would load localhost/signup,

86
00:04:30,228 --> 00:04:31,927
which doesn't exist.

87
00:04:31,927 --> 00:04:35,476
Instead, I want to append it to the currently active path,

88
00:04:35,476 --> 00:04:39,643
which is /auth at this point, because /auth/ nothing.

89
00:04:40,578 --> 00:04:42,359
And then I want to append /signup

90
00:04:42,359 --> 00:04:44,500
to go to the second route here.

91
00:04:44,500 --> 00:04:48,722
Of course, I also need to set up pathMatch full

92
00:04:48,722 --> 00:04:50,128
to not get the not get the issue

93
00:04:50,128 --> 00:04:52,279
of always getting redirected,

94
00:04:52,279 --> 00:04:55,719
because there is always a empty path somewhere in the path.

95
00:04:55,719 --> 00:04:58,759
So, these are my routes, and now you could think I

96
00:04:58,759 --> 00:05:02,818
again use RouterModule and then forRoot.

97
00:05:02,818 --> 00:05:05,599
But, this is actually not the case.

98
00:05:05,599 --> 00:05:09,926
I don't to create a new routerModule, I already have one.

99
00:05:09,926 --> 00:05:13,747
I want to add these routes to the existing routes

100
00:05:13,747 --> 00:05:16,027
as child routes for this route.

101
00:05:16,027 --> 00:05:18,486
Wow, that were a lot of routes.

102
00:05:18,486 --> 00:05:22,653
To do so, I will simply export this constant here, export.

103
00:05:25,147 --> 00:05:28,025
And then, in my main routing file, I want

104
00:05:28,025 --> 00:05:30,937
to add them as child routes to this route,

105
00:05:30,937 --> 00:05:34,045
so that Angular2 then knows they should be appended

106
00:05:34,045 --> 00:05:37,427
to this path and loaded in this component,

107
00:05:37,427 --> 00:05:38,915
which happens to be the component

108
00:05:38,915 --> 00:05:42,075
where I have my routerOutlet.

109
00:05:42,075 --> 00:05:44,147
To do this, I can add a new built-in

110
00:05:44,147 --> 00:05:46,965
property named children.

111
00:05:46,965 --> 00:05:50,414
This takes an array of routes and, guess what,

112
00:05:50,414 --> 00:05:53,085
this is exactly what I set up in the auth.routes file,

113
00:05:53,085 --> 00:05:54,867
an array of routes.

114
00:05:54,867 --> 00:05:59,486
So, I can simply add AUTH_ROUTES, also at the import here,

115
00:05:59,486 --> 00:06:01,576
as a value for this property,

116
00:06:01,576 --> 00:06:04,966
and this registers these routes here

117
00:06:04,966 --> 00:06:09,133
as child routes for my /auth path here.

118
00:06:10,216 --> 00:06:13,216
And this is also the explanation why Angular2

119
00:06:13,216 --> 00:06:17,383
will load them in my authentication component, here,

120
00:06:18,227 --> 00:06:19,838
because this is simply the component

121
00:06:19,838 --> 00:06:24,718
which gets loaded here, which now has the child routes.

122
00:06:24,718 --> 00:06:28,416
Of course, the missing piece is to now hook up these links,

123
00:06:28,416 --> 00:06:31,918
which is easy, again, with routerLink,

124
00:06:31,918 --> 00:06:36,085
and then here an array where I want to navigate to signup.

125
00:06:38,238 --> 00:06:42,408
Not /signup, because I don't want to go to localhost/signup.

126
00:06:42,408 --> 00:06:45,746
I want to go to auth/signup.

127
00:06:45,746 --> 00:06:49,579
If I now copy this to my other two links here,

128
00:06:50,787 --> 00:06:53,787
signin and logout, and then also add

129
00:06:55,387 --> 00:06:58,128
the routerLinkActive directive here

130
00:06:58,128 --> 00:07:02,456
to style the active link like we did on our main header.

131
00:07:02,456 --> 00:07:06,289
If I save this and then reload my application,

132
00:07:07,568 --> 00:07:10,638
you now see the signup route is selected by default,

133
00:07:10,638 --> 00:07:13,640
and if I switch you can see I can navigate

134
00:07:13,640 --> 00:07:14,473
to all these routes.

135
00:07:14,473 --> 00:07:16,786
The styling is, of course, off for a signup and signin

136
00:07:16,786 --> 00:07:19,874
because I haven't added my Bootstrap grid classes,

137
00:07:19,874 --> 00:07:22,194
but you see the routing works great.

138
00:07:22,194 --> 00:07:24,808
I can still go to the messenger and back

139
00:07:24,808 --> 00:07:26,974
to the authentication, where I now have these tabs

140
00:07:26,974 --> 00:07:29,903
to be used, so that is great.

141
00:07:29,903 --> 00:07:32,760
The missing part before we then finally start adding

142
00:07:32,760 --> 00:07:36,189
some backend functionality is to set up the signup

143
00:07:36,189 --> 00:07:38,247
and signin form, and for that, I'm going

144
00:07:38,247 --> 00:07:40,078
to show you a different approach

145
00:07:40,078 --> 00:07:42,578
of creating forms in Angular2.

